# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from external_integration.v1alpha1 import models_pb2 as external__integration_dot_v1alpha1_dot_models__pb2


class ModelsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListModels = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/ListModels',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.ListModelsRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.ListModelsResponse.FromString,
                )
        self.GetModel = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/GetModel',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.GetModelRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.Model.FromString,
                )
        self.GetTrainParameters = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/GetTrainParameters',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.GetTrainParametersRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.GetTrainParametersResponse.FromString,
                )
        self.TrainModel = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/TrainModel',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.TrainModelRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.TrainModelResponse.FromString,
                )
        self.DeleteModel = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/DeleteModel',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.DeleteModelRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.DeleteModelResponse.FromString,
                )
        self.UnloadModel = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/UnloadModel',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.UnloadModelRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.UnloadModelResponse.FromString,
                )
        self.Classify = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/Classify',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.ClassifyRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.ClassifyResponse.FromString,
                )
        self.Embed = channel.unary_unary(
                '/zia.ai.external_integration.v1alpha1.Models/Embed',
                request_serializer=external__integration_dot_v1alpha1_dot_models__pb2.EmbedRequest.SerializeToString,
                response_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.EmbedResponse.FromString,
                )


class ModelsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListModels(self, request, context):
        """List the models supported by this integration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModel(self, request, context):
        """Get information about a specific model. The application may request unlisted models if they are manually entered by the user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainParameters(self, request, context):
        """Retrieves the parameters to use for a TrainModel request (such as the expected workspace export format)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainModel(self, request, context):
        """Trains (or fine-tunes) a model based on a workspace export
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteModel(self, request, context):
        """Deletes a model that is no longer required
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnloadModel(self, request, context):
        """Indicates that the given model is no longer immediately needed and can be unloaded from memory.
        If the model is ephemeral, this is equivalent to a deletion because it was not persisted to disk.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Classify(self, request, context):
        """Classify multiple examples
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Embed(self, request, context):
        """Embed input examples into a latent space
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListModels,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.ListModelsRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.ListModelsResponse.SerializeToString,
            ),
            'GetModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModel,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.GetModelRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.Model.SerializeToString,
            ),
            'GetTrainParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainParameters,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.GetTrainParametersRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.GetTrainParametersResponse.SerializeToString,
            ),
            'TrainModel': grpc.unary_unary_rpc_method_handler(
                    servicer.TrainModel,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.TrainModelRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.TrainModelResponse.SerializeToString,
            ),
            'DeleteModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteModel,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.DeleteModelRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.DeleteModelResponse.SerializeToString,
            ),
            'UnloadModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UnloadModel,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.UnloadModelRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.UnloadModelResponse.SerializeToString,
            ),
            'Classify': grpc.unary_unary_rpc_method_handler(
                    servicer.Classify,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.ClassifyRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.ClassifyResponse.SerializeToString,
            ),
            'Embed': grpc.unary_unary_rpc_method_handler(
                    servicer.Embed,
                    request_deserializer=external__integration_dot_v1alpha1_dot_models__pb2.EmbedRequest.FromString,
                    response_serializer=external__integration_dot_v1alpha1_dot_models__pb2.EmbedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zia.ai.external_integration.v1alpha1.Models', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Models(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/ListModels',
            external__integration_dot_v1alpha1_dot_models__pb2.ListModelsRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.ListModelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/GetModel',
            external__integration_dot_v1alpha1_dot_models__pb2.GetModelRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.Model.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrainParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/GetTrainParameters',
            external__integration_dot_v1alpha1_dot_models__pb2.GetTrainParametersRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.GetTrainParametersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrainModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/TrainModel',
            external__integration_dot_v1alpha1_dot_models__pb2.TrainModelRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.TrainModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/DeleteModel',
            external__integration_dot_v1alpha1_dot_models__pb2.DeleteModelRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.DeleteModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnloadModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/UnloadModel',
            external__integration_dot_v1alpha1_dot_models__pb2.UnloadModelRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.UnloadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Classify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/Classify',
            external__integration_dot_v1alpha1_dot_models__pb2.ClassifyRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.ClassifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Embed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_integration.v1alpha1.Models/Embed',
            external__integration_dot_v1alpha1_dot_models__pb2.EmbedRequest.SerializeToString,
            external__integration_dot_v1alpha1_dot_models__pb2.EmbedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
