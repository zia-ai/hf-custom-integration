"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import external_nlu.v1alpha1.service_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import playbook.data.config.v1alpha1.config_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Model(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    EMBEDDINGS_FIELD_NUMBER: builtins.int
    CLASSIFICATION_FIELD_NUMBER: builtins.int
    id: builtins.str
    """A unique identifier used for identifying this models in future API calls"""
    display_name: builtins.str
    """The name of the model which should be displayed to the user"""
    @property
    def embeddings(self) -> global___EmbedConfig:
        """Set if this model can project input phrases into a latent representation"""
    @property
    def classification(self) -> global___ClassificationConfig:
        """Set if this model can directly classify examples"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        display_name: builtins.str = ...,
        embeddings: global___EmbedConfig | None = ...,
        classification: global___ClassificationConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["classification", b"classification", "embeddings", b"embeddings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["classification", b"classification", "display_name", b"display_name", "embeddings", b"embeddings", "id", b"id"]) -> None: ...

global___Model = Model

class ClassificationConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_BATCH_SIZE_FIELD_NUMBER: builtins.int
    max_batch_size: builtins.int
    """Maximum batch size sent in a single request"""
    def __init__(
        self,
        *,
        max_batch_size: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_batch_size", b"max_batch_size"]) -> None: ...

global___ClassificationConfig = ClassificationConfig

class ListModelsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace"]) -> None: ...

global___ListModelsRequest = ListModelsRequest

class ListModelsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODELS_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]:
        """The list of available models"""
    def __init__(
        self,
        *,
        models: collections.abc.Iterable[global___Model] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["models", b"models"]) -> None: ...

global___ListModelsResponse = ListModelsResponse

class GetTrainParametersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace"]) -> None: ...

global___GetTrainParametersRequest = GetTrainParametersRequest

class GetTrainParametersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FORMAT_FIELD_NUMBER: builtins.int
    FORMAT_OPTIONS_FIELD_NUMBER: builtins.int
    data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType
    """The format to use when exporting the workspace's data"""
    @property
    def format_options(self) -> playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions:
        """Options of the format of the exported data.
        Only the options related to the data format are considered. Predicates filtering the data by tags are not considered.
        """
    def __init__(
        self,
        *,
        data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType = ...,
        format_options: playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["format_options", b"format_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_format", b"data_format", "format_options", b"format_options"]) -> None: ...

global___GetTrainParametersResponse = GetTrainParametersResponse

class TrainModelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    DATA_FORMAT_FIELD_NUMBER: builtins.int
    FORMAT_OPTIONS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType
    """The format of the data field"""
    @property
    def format_options(self) -> playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions:
        """Options of the format of the exported data."""
    data: builtins.bytes
    """The workspace export"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType = ...,
        format_options: playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions | None = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["format_options", b"format_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "data_format", b"data_format", "format_options", b"format_options", "integration_id", b"integration_id", "namespace", b"namespace"]) -> None: ...

global___TrainModelRequest = TrainModelRequest

class TrainModelResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_FIELD_NUMBER: builtins.int
    @property
    def model(self) -> global___Model:
        """Model that was trained"""
    def __init__(
        self,
        *,
        model: global___Model | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model", b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model", b"model"]) -> None: ...

global___TrainModelResponse = TrainModelResponse

class DeleteModelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    model_id: builtins.str
    """The (integration side) id of the model to delete"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        model_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "model_id", b"model_id", "namespace", b"namespace"]) -> None: ...

global___DeleteModelRequest = DeleteModelRequest

class DeleteModelResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteModelResponse = DeleteModelResponse

class UnloadModelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    model_id: builtins.str
    """The (integration side) id of the model to delete"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        model_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "model_id", b"model_id", "namespace", b"namespace"]) -> None: ...

global___UnloadModelRequest = UnloadModelRequest

class UnloadModelResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UnloadModelResponse = UnloadModelResponse

class ClassifyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    EXAMPLES_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    model_id: builtins.str
    """The (integration side)  id of the model to use for classification"""
    @property
    def examples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[external_nlu.v1alpha1.service_pb2.Example]:
        """The examples to classify"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        model_id: builtins.str = ...,
        examples: collections.abc.Iterable[external_nlu.v1alpha1.service_pb2.Example] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["examples", b"examples", "integration_id", b"integration_id", "model_id", b"model_id", "namespace", b"namespace"]) -> None: ...

global___ClassifyRequest = ClassifyRequest

class ClassifyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PREDICTIONS_FIELD_NUMBER: builtins.int
    @property
    def predictions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[external_nlu.v1alpha1.service_pb2.Predictions]:
        """List of predictions for the requested batch, this will contain as many elements
        as present in the `examples` request parameter.
        """
    def __init__(
        self,
        *,
        predictions: collections.abc.Iterable[external_nlu.v1alpha1.service_pb2.Predictions] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["predictions", b"predictions"]) -> None: ...

global___ClassifyResponse = ClassifyResponse

class GetModelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    model_id: builtins.str
    """The (integration side) id of the model to delete"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        model_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "model_id", b"model_id", "namespace", b"namespace"]) -> None: ...

global___GetModelRequest = GetModelRequest

class EmbedConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIMENSIONALITY_FIELD_NUMBER: builtins.int
    MAX_BATCH_SIZE_FIELD_NUMBER: builtins.int
    MAX_TOKEN_SIZE_FIELD_NUMBER: builtins.int
    MAX_TOKEN_COUNT_FIELD_NUMBER: builtins.int
    dimensionality: builtins.int
    """Dimensionality of the latent space"""
    max_batch_size: builtins.int
    """Maximum batch size sent in a single request"""
    max_token_size: builtins.int
    """Maximum size of tokens of inputs."""
    max_token_count: builtins.int
    """Maximum number of tokens per input."""
    def __init__(
        self,
        *,
        dimensionality: builtins.int = ...,
        max_batch_size: builtins.int = ...,
        max_token_size: builtins.int = ...,
        max_token_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensionality", b"dimensionality", "max_batch_size", b"max_batch_size", "max_token_count", b"max_token_count", "max_token_size", b"max_token_size"]) -> None: ...

global___EmbedConfig = EmbedConfig

class EmbedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    EXAMPLES_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    model_id: builtins.str
    """The (integration side) model id to use for embedding"""
    @property
    def examples(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The verbatim content of the text to embed"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        model_id: builtins.str = ...,
        examples: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["examples", b"examples", "integration_id", b"integration_id", "model_id", b"model_id", "namespace", b"namespace"]) -> None: ...

global___EmbedRequest = EmbedRequest

class EmbedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Packed vectors. Size must be equal to all elements of shape multiplied together (in numpy layout)."""
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """The shape of the returned data (used as a sanity check, the last value must match `model_spec.dimension`)"""
    def __init__(
        self,
        *,
        data: collections.abc.Iterable[builtins.float] | None = ...,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "shape", b"shape"]) -> None: ...

global___EmbedResponse = EmbedResponse
