"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import playbook.data.config.v1alpha1.config_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Workspace(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    id: builtins.str
    """A unique identifier for the workspace"""
    name: builtins.str
    """The user-visible name linked to this workspace"""
    description: builtins.str
    """The user-visible description (if available)"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "id", b"id", "name", b"name"]) -> None: ...

global___Workspace = Workspace

class ListWorkspacesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace"]) -> None: ...

global___ListWorkspacesRequest = ListWorkspacesRequest

class ListWorkspacesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKSPACES_FIELD_NUMBER: builtins.int
    @property
    def workspaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Workspace]:
        """The list of workspaces"""
    def __init__(
        self,
        *,
        workspaces: collections.abc.Iterable[global___Workspace] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["workspaces", b"workspaces"]) -> None: ...

global___ListWorkspacesResponse = ListWorkspacesResponse

class GetWorkspaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    WORKSPACE_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    workspace_id: builtins.str
    """The id of the workspace"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        workspace_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace", "workspace_id", b"workspace_id"]) -> None: ...

global___GetWorkspaceRequest = GetWorkspaceRequest

class CreateWorkspaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    WORKSPACE_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    @property
    def workspace(self) -> global___Workspace:
        """Workspace to create"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        workspace: global___Workspace | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["workspace", b"workspace"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace", "workspace", b"workspace"]) -> None: ...

global___CreateWorkspaceRequest = CreateWorkspaceRequest

class GetImportParametersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    WORKSPACE_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    workspace_id: builtins.str
    """The id of the workspace"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        workspace_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace", "workspace_id", b"workspace_id"]) -> None: ...

global___GetImportParametersRequest = GetImportParametersRequest

class GetImportParametersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FORMAT_FIELD_NUMBER: builtins.int
    FORMAT_OPTIONS_FIELD_NUMBER: builtins.int
    data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType
    """The format to use when exporting the workspace's data"""
    @property
    def format_options(self) -> playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions:
        """Options of the format of the exported data.
        Only the options related to the data format are considered. Predicates filtering the data by tags are not considered.
        """
    def __init__(
        self,
        *,
        data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType = ...,
        format_options: playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["format_options", b"format_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_format", b"data_format", "format_options", b"format_options"]) -> None: ...

global___GetImportParametersResponse = GetImportParametersResponse

class ImportWorkspaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    WORKSPACE_ID_FIELD_NUMBER: builtins.int
    DATA_FORMAT_FIELD_NUMBER: builtins.int
    FORMAT_OPTIONS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    workspace_id: builtins.str
    """The id of the workspace"""
    data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType
    """The format of the data"""
    @property
    def format_options(self) -> playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions:
        """Options of the format of the exported data."""
    data: builtins.bytes
    """The data to import"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        workspace_id: builtins.str = ...,
        data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType = ...,
        format_options: playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions | None = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["format_options", b"format_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "data_format", b"data_format", "format_options", b"format_options", "integration_id", b"integration_id", "namespace", b"namespace", "workspace_id", b"workspace_id"]) -> None: ...

global___ImportWorkspaceRequest = ImportWorkspaceRequest

class ImportWorkspaceResponse(google.protobuf.message.Message):
    """TODO: Optional id if created?"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ImportWorkspaceResponse = ImportWorkspaceResponse

class ExportWorkspaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    INTEGRATION_ID_FIELD_NUMBER: builtins.int
    WORKSPACE_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace in which this integration is located"""
    integration_id: builtins.str
    """The id of the integration"""
    workspace_id: builtins.str
    """The id of the workspace"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        integration_id: builtins.str = ...,
        workspace_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["integration_id", b"integration_id", "namespace", b"namespace", "workspace_id", b"workspace_id"]) -> None: ...

global___ExportWorkspaceRequest = ExportWorkspaceRequest

class ExportWorkspaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FORMAT_FIELD_NUMBER: builtins.int
    FORMAT_OPTIONS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType
    """The format of the data"""
    @property
    def format_options(self) -> playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions:
        """Options of the format of the exported data."""
    data: builtins.bytes
    """The exported data in the given format"""
    def __init__(
        self,
        *,
        data_format: playbook.data.config.v1alpha1.config_pb2.IntentsDataFormat.ValueType = ...,
        format_options: playbook.data.config.v1alpha1.config_pb2.IntentsDataOptions | None = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["format_options", b"format_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "data_format", b"data_format", "format_options", b"format_options"]) -> None: ...

global___ExportWorkspaceResponse = ExportWorkspaceResponse
