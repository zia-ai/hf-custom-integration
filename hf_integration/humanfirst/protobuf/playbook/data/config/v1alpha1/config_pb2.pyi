"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import tags.tags_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _IntentsDataFormat:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _IntentsDataFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IntentsDataFormat.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INTENTS_FORMAT_INVALID: _IntentsDataFormat.ValueType  # 0
    INTENTS_FORMAT_CSV_SIMPLE_INTENTS: _IntentsDataFormat.ValueType  # 1
    """Simple `phrase,intent_name` CSV format"""
    INTENTS_FORMAT_RASA_MARKDOWN: _IntentsDataFormat.ValueType  # 2
    """Rasa 1.0 NLU markdown"""
    INTENTS_FORMAT_RASA_YAML: _IntentsDataFormat.ValueType  # 4
    """Rasa 2.0 NLU yaml"""
    INTENTS_FORMAT_BOTPRESS_JSON: _IntentsDataFormat.ValueType  # 3
    """Botpress intents JSON format"""
    INTENTS_FORMAT_DIALOGFLOW_ES_AGENT: _IntentsDataFormat.ValueType  # 5
    """Dialogflow ES (v2) agent export format
    See https://cloud.google.com/dialogflow/es/docs/agents-settings#export
    """
    INTENTS_FORMAT_TXT_PHRASES: _IntentsDataFormat.ValueType  # 6
    """Intent phrases in flat text"""
    INTENTS_FORMAT_HF_JSON: _IntentsDataFormat.ValueType  # 7
    """Humanfirst JSON format"""
    INTENTS_FORMAT_COGNIGY_JSON: _IntentsDataFormat.ValueType  # 8
    """Cognigy intents JSON format"""
    INTENTS_FORMAT_DIALOGFLOW_CX_AGENT: _IntentsDataFormat.ValueType  # 9
    """Dialogflow CX JSON package agent export format
    See https://cloud.google.com/dialogflow/cx/docs/reference/json-export
    """

class IntentsDataFormat(_IntentsDataFormat, metaclass=_IntentsDataFormatEnumTypeWrapper): ...

INTENTS_FORMAT_INVALID: IntentsDataFormat.ValueType  # 0
INTENTS_FORMAT_CSV_SIMPLE_INTENTS: IntentsDataFormat.ValueType  # 1
"""Simple `phrase,intent_name` CSV format"""
INTENTS_FORMAT_RASA_MARKDOWN: IntentsDataFormat.ValueType  # 2
"""Rasa 1.0 NLU markdown"""
INTENTS_FORMAT_RASA_YAML: IntentsDataFormat.ValueType  # 4
"""Rasa 2.0 NLU yaml"""
INTENTS_FORMAT_BOTPRESS_JSON: IntentsDataFormat.ValueType  # 3
"""Botpress intents JSON format"""
INTENTS_FORMAT_DIALOGFLOW_ES_AGENT: IntentsDataFormat.ValueType  # 5
"""Dialogflow ES (v2) agent export format
See https://cloud.google.com/dialogflow/es/docs/agents-settings#export
"""
INTENTS_FORMAT_TXT_PHRASES: IntentsDataFormat.ValueType  # 6
"""Intent phrases in flat text"""
INTENTS_FORMAT_HF_JSON: IntentsDataFormat.ValueType  # 7
"""Humanfirst JSON format"""
INTENTS_FORMAT_COGNIGY_JSON: IntentsDataFormat.ValueType  # 8
"""Cognigy intents JSON format"""
INTENTS_FORMAT_DIALOGFLOW_CX_AGENT: IntentsDataFormat.ValueType  # 9
"""Dialogflow CX JSON package agent export format
See https://cloud.google.com/dialogflow/cx/docs/reference/json-export
"""
global___IntentsDataFormat = IntentsDataFormat

class IntentsDataOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HIERARCHICAL_INTENT_NAME_DISABLED_FIELD_NUMBER: builtins.int
    HIERARCHICAL_DELIMITER_FIELD_NUMBER: builtins.int
    ZIP_ENCODING_FIELD_NUMBER: builtins.int
    GZIP_ENCODING_FIELD_NUMBER: builtins.int
    HIERARCHICAL_FOLLOW_UP_FIELD_NUMBER: builtins.int
    INCLUDE_NEGATIVE_PHRASES_FIELD_NUMBER: builtins.int
    INTENT_TAG_PREDICATE_FIELD_NUMBER: builtins.int
    PHRASE_TAG_PREDICATE_FIELD_NUMBER: builtins.int
    SKIP_EMPTY_INTENTS_FIELD_NUMBER: builtins.int
    hierarchical_intent_name_disabled: builtins.bool
    """Disables intents hierarchy encoding via the intent names.
    Ex: 'Parent / Sub-parent / Intent'
    """
    hierarchical_delimiter: builtins.str
    """Overrides the default delimiter used for intent hierarchy.
    Default is '--' for Botpress and Dialogflow, '+' for Rasa, '/' for CSV
    """
    zip_encoding: builtins.bool
    """Indicates that the intents are zipped and may be splits in different files."""
    gzip_encoding: builtins.bool
    """Indicates that the intent file is gzipped."""
    hierarchical_follow_up: builtins.bool
    """To be used with Dialogflow to use intents hierarchy using intents follow-up."""
    include_negative_phrases: builtins.bool
    """Export negative phrases as well."""
    @property
    def intent_tag_predicate(self) -> tags.tags_pb2.TagPredicate:
        """(Optional) If specified, only export intents matching the specified tag predicate."""
    @property
    def phrase_tag_predicate(self) -> tags.tags_pb2.TagPredicate:
        """(Optional) If specified, only export phrases matching the specified tag predicate."""
    skip_empty_intents: builtins.bool
    """Skip all intents that do not contain phrases."""
    def __init__(
        self,
        *,
        hierarchical_intent_name_disabled: builtins.bool = ...,
        hierarchical_delimiter: builtins.str = ...,
        zip_encoding: builtins.bool = ...,
        gzip_encoding: builtins.bool = ...,
        hierarchical_follow_up: builtins.bool = ...,
        include_negative_phrases: builtins.bool = ...,
        intent_tag_predicate: tags.tags_pb2.TagPredicate | None = ...,
        phrase_tag_predicate: tags.tags_pb2.TagPredicate | None = ...,
        skip_empty_intents: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intent_tag_predicate", b"intent_tag_predicate", "phrase_tag_predicate", b"phrase_tag_predicate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["gzip_encoding", b"gzip_encoding", "hierarchical_delimiter", b"hierarchical_delimiter", "hierarchical_follow_up", b"hierarchical_follow_up", "hierarchical_intent_name_disabled", b"hierarchical_intent_name_disabled", "include_negative_phrases", b"include_negative_phrases", "intent_tag_predicate", b"intent_tag_predicate", "phrase_tag_predicate", b"phrase_tag_predicate", "skip_empty_intents", b"skip_empty_intents", "zip_encoding", b"zip_encoding"]) -> None: ...

global___IntentsDataOptions = IntentsDataOptions

class ImportOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLEAR_INTENTS_FIELD_NUMBER: builtins.int
    CLEAR_ENTITIES_FIELD_NUMBER: builtins.int
    CLEAR_TAGS_FIELD_NUMBER: builtins.int
    MERGE_INTENTS_FIELD_NUMBER: builtins.int
    MERGE_ENTITIES_FIELD_NUMBER: builtins.int
    MERGE_TAGS_FIELD_NUMBER: builtins.int
    EXTRA_INTENT_TAGS_FIELD_NUMBER: builtins.int
    EXTRA_PHRASE_TAGS_FIELD_NUMBER: builtins.int
    OVERRIDE_METADATA_FIELD_NUMBER: builtins.int
    OVERRIDE_NAME_FIELD_NUMBER: builtins.int
    clear_intents: builtins.bool
    """Clears workspace intents before importing."""
    clear_entities: builtins.bool
    """Clears workspace entities before importing."""
    clear_tags: builtins.bool
    """Clears workspace tags before importing.
    Note: should not be used in combination with `extra_intent_tags` or `extra_phrase_tags` since
          we will clear potentially referenced tags.
    """
    merge_intents: builtins.bool
    """Tries to merge intents into existing ones if they can be found in the workspace."""
    merge_entities: builtins.bool
    """Tries to merge entities into existing ones if they can be found in the workspace."""
    merge_tags: builtins.bool
    """Tries to merge tags into existing ones if they can be found in the workspace."""
    @property
    def extra_intent_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tags.tags_pb2.TagReference]:
        """Add extra tags to imported intents."""
    @property
    def extra_phrase_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tags.tags_pb2.TagReference]:
        """Add extra tags to imported phrases."""
    override_metadata: builtins.bool
    """Overrides the description, color, and metadata of the workspace with the
    values of the imported file if they are supported in the received format.
    Supported formats: `INTENTS_FORMAT_HF_JSON`
    """
    override_name: builtins.bool
    """Overrides the name of the workspace with the value of the imported file
    if they are supported in the received format.
    Supported formats: `INTENTS_FORMAT_HF_JSON`
    """
    def __init__(
        self,
        *,
        clear_intents: builtins.bool = ...,
        clear_entities: builtins.bool = ...,
        clear_tags: builtins.bool = ...,
        merge_intents: builtins.bool = ...,
        merge_entities: builtins.bool = ...,
        merge_tags: builtins.bool = ...,
        extra_intent_tags: collections.abc.Iterable[tags.tags_pb2.TagReference] | None = ...,
        extra_phrase_tags: collections.abc.Iterable[tags.tags_pb2.TagReference] | None = ...,
        override_metadata: builtins.bool = ...,
        override_name: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clear_entities", b"clear_entities", "clear_intents", b"clear_intents", "clear_tags", b"clear_tags", "extra_intent_tags", b"extra_intent_tags", "extra_phrase_tags", b"extra_phrase_tags", "merge_entities", b"merge_entities", "merge_intents", b"merge_intents", "merge_tags", b"merge_tags", "override_metadata", b"override_metadata", "override_name", b"override_name"]) -> None: ...

global___ImportOptions = ImportOptions
