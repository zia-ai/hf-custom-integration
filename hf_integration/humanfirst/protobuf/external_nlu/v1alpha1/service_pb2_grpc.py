# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from external_nlu.v1alpha1 import service_pb2 as external__nlu_dot_v1alpha1_dot_service__pb2


class ExternalNLUStub(object):
    """Lightweight interface between a pipeline job and a third party NLU service.
    The pipeline side of things will launch a shim process and expose this interface over a unix socket.
    The process is teared down once the job has completed.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSupportedEngines = channel.unary_unary(
                '/zia.ai.external_nlu.v1alpha1.ExternalNLU/GetSupportedEngines',
                request_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.GetSupportedEnginesRequest.SerializeToString,
                response_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.GetSupportedEnginesResponse.FromString,
                )
        self.TrainModel = channel.unary_unary(
                '/zia.ai.external_nlu.v1alpha1.ExternalNLU/TrainModel',
                request_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.TrainModelRequest.SerializeToString,
                response_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.TrainModelResponse.FromString,
                )
        self.LoadModel = channel.unary_unary(
                '/zia.ai.external_nlu.v1alpha1.ExternalNLU/LoadModel',
                request_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.LoadModelRequest.SerializeToString,
                response_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.LoadModelResponse.FromString,
                )
        self.BatchPredict = channel.unary_unary(
                '/zia.ai.external_nlu.v1alpha1.ExternalNLU/BatchPredict',
                request_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.BatchPredictRequest.SerializeToString,
                response_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.BatchPredictResponse.FromString,
                )
        self.UnloadModel = channel.unary_unary(
                '/zia.ai.external_nlu.v1alpha1.ExternalNLU/UnloadModel',
                request_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.UnloadModelRequest.SerializeToString,
                response_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.UnloadModelResponse.FromString,
                )


class ExternalNLUServicer(object):
    """Lightweight interface between a pipeline job and a third party NLU service.
    The pipeline side of things will launch a shim process and expose this interface over a unix socket.
    The process is teared down once the job has completed.
    """

    def GetSupportedEngines(self, request, context):
        """Gets the list of supported engines for this instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainModel(self, request, context):
        """Trains a new model based on a data export
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadModel(self, request, context):
        """Operations on existing trained model
        Loads a model for predictions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchPredict(self, request, context):
        """Run predictions on a loaded model
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnloadModel(self, request, context):
        """Unloads a model from memory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalNLUServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSupportedEngines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSupportedEngines,
                    request_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.GetSupportedEnginesRequest.FromString,
                    response_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.GetSupportedEnginesResponse.SerializeToString,
            ),
            'TrainModel': grpc.unary_unary_rpc_method_handler(
                    servicer.TrainModel,
                    request_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.TrainModelRequest.FromString,
                    response_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.TrainModelResponse.SerializeToString,
            ),
            'LoadModel': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadModel,
                    request_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.LoadModelRequest.FromString,
                    response_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.LoadModelResponse.SerializeToString,
            ),
            'BatchPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchPredict,
                    request_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.BatchPredictRequest.FromString,
                    response_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.BatchPredictResponse.SerializeToString,
            ),
            'UnloadModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UnloadModel,
                    request_deserializer=external__nlu_dot_v1alpha1_dot_service__pb2.UnloadModelRequest.FromString,
                    response_serializer=external__nlu_dot_v1alpha1_dot_service__pb2.UnloadModelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zia.ai.external_nlu.v1alpha1.ExternalNLU', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalNLU(object):
    """Lightweight interface between a pipeline job and a third party NLU service.
    The pipeline side of things will launch a shim process and expose this interface over a unix socket.
    The process is teared down once the job has completed.
    """

    @staticmethod
    def GetSupportedEngines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_nlu.v1alpha1.ExternalNLU/GetSupportedEngines',
            external__nlu_dot_v1alpha1_dot_service__pb2.GetSupportedEnginesRequest.SerializeToString,
            external__nlu_dot_v1alpha1_dot_service__pb2.GetSupportedEnginesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrainModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_nlu.v1alpha1.ExternalNLU/TrainModel',
            external__nlu_dot_v1alpha1_dot_service__pb2.TrainModelRequest.SerializeToString,
            external__nlu_dot_v1alpha1_dot_service__pb2.TrainModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_nlu.v1alpha1.ExternalNLU/LoadModel',
            external__nlu_dot_v1alpha1_dot_service__pb2.LoadModelRequest.SerializeToString,
            external__nlu_dot_v1alpha1_dot_service__pb2.LoadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_nlu.v1alpha1.ExternalNLU/BatchPredict',
            external__nlu_dot_v1alpha1_dot_service__pb2.BatchPredictRequest.SerializeToString,
            external__nlu_dot_v1alpha1_dot_service__pb2.BatchPredictResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnloadModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zia.ai.external_nlu.v1alpha1.ExternalNLU/UnloadModel',
            external__nlu_dot_v1alpha1_dot_service__pb2.UnloadModelRequest.SerializeToString,
            external__nlu_dot_v1alpha1_dot_service__pb2.UnloadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
